<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>40 个有趣的 CSS 网站</title>
    <link href="/2021/07/27/40-%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84-CSS-%E7%BD%91%E7%AB%99/"/>
    <url>/2021/07/27/40-%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84-CSS-%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<p><img src="/image/index.jpg"></p><h1 data-id="heading-0">🔖 好玩的 CSS - 40 个有趣的 CSS 网站</h1><h2 data-id="heading-1">🌐  基础学习</h2><p><a href="https://cssreference.io/" target="_blank" rel="nofollow noopener noreferrer" title="" ref="nofollow noopener noreferrer">cssreference.io/</a>CSS 参考书</p><p><a href="https://chokcoco.github.io/CSS-Inspiration/#/" target="_blank" title="" >chokcoco.github.io/CSS-Inspira…</a>CSS 灵感</p><p><a href="https://www.awwwards.com/sites/zero-impact" target="_blank" title="" >www.awwwards.com/sites/zero-…</a>UI 设计师的灵感源泉</p><p><a href="https://htmlcheatsheet.com/css/" target="_blank"  title="" >htmlcheatsheet.com/css/</a>交互式在线 CSS 速记表</p><p><a href="https://zh.learnlayout.com/" target="_blank"  title="" >zh.learnlayout.com/</a>学习 CSS 布局</p><p><a href="https://css-tricks.com/" target="_blank" title="" >css-tricks.com/</a>CSS 小花招</p><p><a href="https://web.dev/learn/css/" target="_blank"  title="" >web.dev/learn/css/</a>web.dev 上的 CSS 教学专栏</p><p><a href="https://www.w3schools.com/howto/" target="_blank"  title="" >www.w3schools.com/howto/</a>W3 How To 学习如何实现常见的页面组件</p><p><a href="https://codemyui.com/tag/pure-css/" target="_blank"  title="" >codemyui.com/tag/pure-cs…</a>450 多个纯 CSS 实现的 UI 设计</p><h2 data-id="heading-2">🧚  CSS 动画</h2><p>纯 CSS 动画，这里不包含 JS 动画库</p><p><a href="https://animate.style/" target="_blank"  title="" >animate.style/</a>CSS 动画集</p><p><a href="https://tholman.com/obnoxious/" target="_blank"  title="" >tholman.com/obnoxious/</a>不过脑子的动效，不过看起来很“猛”</p><p><a href="https://elrumordelaluz.github.io/csshake/" target="_blank"  title="">elrumordelaluz.github.io/csshake/</a>CSS 抖动特效</p><p><a href="https://animxyz.com/" target="_blank"  title="" >animxyz.com/</a>CSS 三维变换动画</p><p><a href="https://animista.net/play/" target="_blank"  title="">animista.net/play/</a>CSS 动画集，可自由调节动画参数，生成代码片段</p><p><a href="https://ianlunn.github.io/Hover/" target="_blank"  title="" >ianlunn.github.io/Hover/</a>CSS 鼠标悬浮动画</p><p><a href="https://www.minimamente.com/project/magic/" target="_blank"  title="" >www.minimamente.com/project/mag…</a>适合做专场动画的 CSS 动效</p><h2 data-id="heading-3">🕹️  教学游戏</h2><p><a href="https://cssgridgarden.com/" target="_blank"  title="" >cssgridgarden.com/</a>通过给萝卜浇水，学习 CSS 网格布局</p><p><a href="http://www.flexboxdefense.com/" target="_blank"  title="">www.flexboxdefense.com/</a>CSS 塔防游戏，学习 flex 布局</p><p><a href="https://flukeout.github.io/" target="_blank"  title="">flukeout.github.io/</a>通过做饭，练习 CSS 选择器</p><p><a href="https://flexboxfroggy.com/" target="_blank"  title="">flexboxfroggy.com/</a>送小青蛙回家，学习 flex 布局</p><h2 data-id="heading-4">🎰  代码生成</h2><p><a href="https://cssboxshadow.com/" target="_blank"  title="" >cssboxshadow.com/</a>盒子阴影 box-shadow 生成器</p><p><a href="https://glassgenerator.netlify.app/" target="_blank"  title="">glassgenerator.netlify.app/</a>磨砂透明效果</p><p><a href="https://coolbackgrounds.io/" target="_blank"  title="">coolbackgrounds.io/</a>酷酷的背景图</p><p><a href="https://www.pixelartcss.com/" target="_blank"  title="">www.pixelartcss.com/</a>自定义像素素材</p><p><a href="https://stripesgenerator.com/" target="_blank"  title="">stripesgenerator.com/</a>布条背景图生成器</p><p><a href="https://svgwave.in/" target="_blank"  title="" >svgwave.in/</a>波纹生成器</p><p><a href="https://numl.design/theme-generator" target="_blank"  title="" >numl.design/theme-gener…</a>numl design 的主题生成器</p><p><a href="https://color.adobe.com/zh/create/color-accessibility" target="_blank"  title="" >color.adobe.com/zh/create/c…</a>adobe 针对色盲用户可访问性，提供的一个色彩拾取工具</p><p><a href="https://9elements.github.io/fancy-border-radius/" target="_blank"  title="" >9elements.github.io/fancy-borde…</a>圆角 border-radius 的新玩法</p><p><a href="https://codepen.io/prathkum/pen/xxEMoZy" target="_blank"  title="">codepen.io/prathkum/pe…</a>根据上面的圆角，我们可以画出一滴水珠💦 </p><p><a href="https://accordionslider.com/" target="_blank"  title="">accordionslider.com/</a>纯 CSS 实现百叶窗</p><p><a href="https://grid.layoutit.com/" target="_blank"  title="">grid.layoutit.com/</a>网格布局生成器</p><p><a href="https://csslayout.io/" target="_blank"  title="" >csslayout.io/</a>纯 CSS 实现的一套页面元素、组件集</p><p><a href="https://keyframes.app/animate/" target="_blank"  title="">keyframes.app/animate/</a>CSS 动画生成器</p><p><a href="https://cssanimate.com/" target="_blank"  title="" >cssanimate.com/</a>又一个 CSS 动画生成器</p><p><a href="https://www.cssfiltergenerator.com/" target="_blank"  title="">www.cssfiltergenerator.com/</a>CSS 滤镜</p><p><a href="https://imageslidermaker.com/" target="_blank"  title="">imageslidermaker.com/</a>CSS 轮播生成器，依赖 jQuery 😂</p><p><a href="https://www.30secondsofcode.org/css/p/1" target="_blank"  title="">www.30secondsofcode.org/css/p/1</a>30 秒代码片段 — CSS 篇</p><h2 data-id="heading-5">🎨  色彩搭配</h2><p><a href="https://colorhunt.co/" target="_blank"  title="" >colorhunt.co/</a>Color Hunt</p><p><a href="https://mycolor.space/" target="_blank"  title="" >mycolor.space/</a>还是配色</p><p><a href="https://clrs.cc/" target="_blank"  title="">clrs.cc/</a>还是配色</p><p><a href="https://cssgradient.io/" target="_blank"  title="" >cssgradient.io/</a>CSS 渐变色</p><h3 data-id="heading-6">参考：</h3><ul><li><a href="https://github.com/jobbole/awesome-css-cn" target="_blank"  title="" >github.com/jobbole/awe…</a> CSS 资源大全中文版</li><li><a href="https://github.com/awesome-css-group/awesome-css" target="_blank"  title="">github.com/awesome-css…</a> Awesome CSS</li><li><a href="https://juejin.cn/post/6903712420485660685" target="_blank" title="https://juejin.cn/post/6903712420485660685">juejin.cn/post/690371…</a> 一些CSS特效网站整理</li></ul><hr><blockquote><p>作者：snoopylion<br>引用自：<a href="https://juejin.cn/post/6982363593241002014">https://juejin.cn/post/6982363593241002014</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flex 布局教程：语法篇</title>
    <link href="/2021/07/27/Flex%E5%B8%83%E5%B1%80%E8%AF%AD%E6%B3%95/"/>
    <url>/2021/07/27/Flex%E5%B8%83%E5%B1%80%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h3 id="网页布局（layout）是-CSS-的一个重点应用。"><a href="#网页布局（layout）是-CSS-的一个重点应用。" class="headerlink" title="网页布局（layout）是 CSS 的一个重点应用。"></a>网页布局（layout）是 CSS 的一个重点应用。</h3><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071001.gif"></p> <div class="asset-content entry-content" id="main-content">                               <p>布局的传统解决方案，基于<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/box_model" target="_blank">盒状模型</a>，依赖 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/display" target="_blank"><code>display</code></a> 属性 + <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position" target="_blank"><code>position</code></a>属性 + <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/float" target="_blank"><code>float</code></a>属性。它对于那些特殊布局非常不方便，比如，<a href="https://css-tricks.com/centering-css-complete-guide/" target="_blank">垂直居中</a>就不容易实现。</p><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071002.png" alt="" title=""></p><p>2009年，W3C 提出了一种新的方案----Flex 布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。</p><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071003.jpg" alt="" title=""></p><p>Flex 布局将成为未来布局的首选方案。本文介绍它的语法，<a href="https://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank">下一篇文章</a>给出常见布局的 Flex 写法。网友 <a href="http://vgee.cn/" target="_blank">JailBreak</a> 为本文的所有示例制作了 <a href="http://static.vgee.cn/static/index.html" target="_blank">Demo</a>，也可以参考。</p><p>以下内容主要参考了下面两篇文章：<a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank">A Complete Guide to Flexbox</a> 和 <a href="https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties" target="_blank">A Visual Guide to CSS3 Flexbox Properties</a>。</p><h2>一、Flex 布局是什么？</h2><p>Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。</p><p>任何一个容器都可以指定为 Flex 布局。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.box</span><span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p>行内元素也可以使用 Flex 布局。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.box</span><span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p>Webkit 内核的浏览器，必须加上<code>-webkit</code>前缀。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.box</span><span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-flex<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* Safari */</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p>注意，设为 Flex 布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p><h2>二、基本概念</h2><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称"容器"。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称"项目"。</p><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071004.png" alt="" title=""></p><p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做<code>main start</code>，结束位置叫做<code>main end</code>；交叉轴的开始位置叫做<code>cross start</code>，结束位置叫做<code>cross end</code>。</p><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做<code>main size</code>，占据的交叉轴空间叫做<code>cross size</code>。</p><h2>三、容器的属性</h2><p>以下6个属性设置在容器上。</p><blockquote>  <ul><li>flex-direction</li><li>flex-wrap</li><li>flex-flow</li><li>justify-content</li><li>align-items</li><li>align-content</li></ul></blockquote><h3>3.1 flex-direction属性</h3><p><code>flex-direction</code>属性决定主轴的方向（即项目的排列方向）。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.box </span><span class="token punctuation">&#123;</span>  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row | row-reverse | column | column-reverse<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071005.png" alt="" title=""></p><p>它可能有4个值。</p><blockquote>  <ul><li><code>row</code>（默认值）：主轴为水平方向，起点在左端。</li><li><code>row-reverse</code>：主轴为水平方向，起点在右端。</li><li><code>column</code>：主轴为垂直方向，起点在上沿。</li><li><code>column-reverse</code>：主轴为垂直方向，起点在下沿。</li></ul></blockquote><h3>3.2 flex-wrap属性</h3><p>默认情况下，项目都排在一条线（又称"轴线"）上。<code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行。</p><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071006.png" alt="" title=""></p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.box</span><span class="token punctuation">&#123;</span>  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> nowrap | wrap | wrap-reverse<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p>它可能取三个值。</p><p>（1）<code>nowrap</code>（默认）：不换行。</p><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071007.png" alt="" title=""></p><p>（2）<code>wrap</code>：换行，第一行在上方。</p><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071008.jpg" alt="" title=""></p><p>（3）<code>wrap-reverse</code>：换行，第一行在下方。</p><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071009.jpg" alt="" title=""></p><h3>3.3 flex-flow</h3><p><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.box </span><span class="token punctuation">&#123;</span>  <span class="token property">flex-flow</span><span class="token punctuation">:</span> <span class="token ignore">&lt;</span>flex-direction&gt; || <span class="token ignore">&lt;</span>flex-wrap&gt;<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><h3>3.4 justify-content属性</h3><p><code>justify-content</code>属性定义了项目在主轴上的对齐方式。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.box </span><span class="token punctuation">&#123;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071010.png" alt="" title=""></p><p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p><blockquote>  <ul><li><code>flex-start</code>（默认值）：左对齐</li><li><code>flex-end</code>：右对齐</li><li><code>center</code>： 居中</li><li><code>space-between</code>：两端对齐，项目之间的间隔都相等。</li><li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul></blockquote><h3>3.5 align-items属性</h3><p><code>align-items</code>属性定义项目在交叉轴上如何对齐。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.box </span><span class="token punctuation">&#123;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071011.png" alt="" title=""></p><p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p><blockquote>  <ul><li><code>flex-start</code>：交叉轴的起点对齐。</li><li><code>flex-end</code>：交叉轴的终点对齐。</li><li><code>center</code>：交叉轴的中点对齐。</li><li><code>baseline</code>: 项目的第一行文字的基线对齐。</li><li><code>stretch</code>（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul></blockquote><h3>3.6 align-content属性</h3><p><code>align-content</code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.box </span><span class="token punctuation">&#123;</span>  <span class="token property">align-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around | stretch<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071012.png" alt="" title=""></p><p>该属性可能取6个值。</p><blockquote>  <ul><li><code>flex-start</code>：与交叉轴的起点对齐。</li><li><code>flex-end</code>：与交叉轴的终点对齐。</li><li><code>center</code>：与交叉轴的中点对齐。</li><li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li><code>space-around</code>：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li><code>stretch</code>（默认值）：轴线占满整个交叉轴。</li></ul></blockquote><h3>四、项目的属性</h3><p>以下6个属性设置在项目上。</p><blockquote>  <ul><li><code>order</code></li><li><code>flex-grow</code></li><li><code>flex-shrink</code></li><li><code>flex-basis</code></li><li><code>flex</code></li><li><code>align-self</code></li></ul></blockquote><h3>4.1 order属性</h3><p><code>order</code>属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.item </span><span class="token punctuation">&#123;</span>  <span class="token property">order</span><span class="token punctuation">:</span> <span class="token ignore">&lt;</span>integer&gt;<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071013.png" alt="" title=""></p><h3>4.2 flex-grow属性</h3><p><code>flex-grow</code>属性定义项目的放大比例，默认为<code>0</code>，即如果存在剩余空间，也不放大。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.item </span><span class="token punctuation">&#123;</span>  <span class="token property">flex-grow</span><span class="token punctuation">:</span> <span class="token ignore">&lt;</span>number&gt;<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* default 0 */</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071014.png" alt="" title=""></p><p>如果所有项目的<code>flex-grow</code>属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的<code>flex-grow</code>属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><h3>4.3 flex-shrink属性</h3><p><code>flex-shrink</code>属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.item </span><span class="token punctuation">&#123;</span>  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> <span class="token ignore">&lt;</span>number&gt;<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* default 1 */</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071015.jpg" alt="" title=""></p><p>如果所有项目的<code>flex-shrink</code>属性都为1，当空间不足时，都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为0，其他项目都为1，则空间不足时，前者不缩小。</p><p>负值对该属性无效。</p><h3>4.4 flex-basis属性</h3><p><code>flex-basis</code>属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为<code>auto</code>，即项目的本来大小。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.item </span><span class="token punctuation">&#123;</span>  <span class="token property">flex-basis</span><span class="token punctuation">:</span> <span class="token ignore">&lt;</span>length&gt; | auto<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* default auto */</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p>它可以设为跟<code>width</code>或<code>height</code>属性一样的值（比如350px），则项目将占据固定空间。</p><h3>4.5 flex属性</h3><p><code>flex</code>属性是<code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为<code>0 1 auto</code>。后两个属性可选。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.item </span><span class="token punctuation">&#123;</span>  <span class="token property">flex</span><span class="token punctuation">:</span> none | [ <span class="token ignore">&lt;</span><span class="token string">'flex-grow'</span>&gt; <span class="token ignore">&lt;</span><span class="token string">'flex-shrink'</span>&gt;? || <span class="token ignore">&lt;</span><span class="token string">'flex-basis'</span>&gt; ]<span class="token punctuation">&#125;</span></code></pre></div></blockquote><p>该属性有两个快捷值：<code>auto</code> (<code>1 1 auto</code>) 和 none (<code>0 0 auto</code>)。</p><p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><h3>4.6 align-self属性</h3><p><code>align-self</code>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</p><blockquote><div class="hljs code-wrapper"><pre class=" language-css"><code class=" language-css"><span class="token selector">.item </span><span class="token punctuation">&#123;</span>  <span class="token property">align-self</span><span class="token punctuation">:</span> auto | flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre></div></blockquote><p><img src="https://www.ruanyifeng.com/blogimg/asset/2015/bg2015071016.png" alt="" title=""></p><p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p><hr><blockquote><p>作者： 阮一峰<br>转载自：<a href="https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html">https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</a></p></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CSS</tag>
      
      <tag>布局</tag>
      
      <tag>Flex</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
